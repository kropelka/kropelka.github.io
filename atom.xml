<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Karoru]]></title>
  <link href="http://kropelka.github.io/atom.xml" rel="self"/>
  <link href="http://kropelka.github.io/"/>
  <updated>2014-09-15T02:14:42+02:00</updated>
  <id>http://kropelka.github.io/</id>
  <author>
    <name><![CDATA[Karol Piotrowski]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Przełączanie Monitorów W Thinkpadzie X200 Na Gołym X.org]]></title>
    <link href="http://kropelka.github.io/blog/2014/09/15/przelaczanie-monitorow-w-thinkpadzie-x200-na-golym-x-dot-org/"/>
    <updated>2014-09-15T01:38:33+02:00</updated>
    <id>http://kropelka.github.io/blog/2014/09/15/przelaczanie-monitorow-w-thinkpadzie-x200-na-golym-x-dot-org</id>
    <content type="html"><![CDATA[<p>Znudziło mi się ręczne klepanie <code>xrandr</code>, a nie znalazłem żadnego lekkiego narzędzia, które nie wymagało by pociągnięcia połowy Gnome, które ułatwiło by nieco i zautomatyzowało zabawę w wielomonitorowość. Jest <strong>arandr</strong> (<a href="http://christian.amsuess.com/tools/arandr/">http://christian.amsuess.com/tools/arandr/</a>) ale dość toporny w obsłudze i do tego ręczny. Jedyne, czego potrzebowałem w przypadku laptopa to:</p>

<ul>
<li>jak nie ma zewnętrznego monitora, to użyć ekranu wbudowanego,</li>
<li>jak jest coś podłączonego do portu VGA, to wyłączyć ekran laptopa (po co ma mi świecić, nie bardzo widzę sensowne zagospodarowanie ekranu 11&#8221; przy dołączonym większym monitorze, np. 24&#8221; od mojej stacjonarki),</li>
<li>gdybym jednak potrzebował dwóch ekranów (np. prezentując bajecznie kolorowe slajdy Comic Sansem na przepalonym rzutniku), to mogę włączyć ekran wbudowany z shella (najprostsze do realizacji, alias w bashu).</li>
</ul>


<p>Po przeszukaniu cośtam-overflowów i innych takich dowiedziałem się, że podobno jak się wkłada/wyciąga wtyczkę z gniazda VGA, to ma się pojawić event ACPI. Niestety próby złapania tegoż z użyciem <code>acpi_listen</code> wykazały, że mój mały X200 z i915 milczy jak zaklęty mimo wielokrotnego molestowania wypracowanego portu. Ta droga zatem odpada.</p>

<p>Od jakiegoś czasu (chyba od jąder 2.6) mamy coś takiego jak <code>sysfs</code> podmontowany pod <code>/sys</code>, który jest nieco bardziej współczesną odmianą <code>/proc</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='shell-session'><span class='line'><span class="gp">[karoru@zea ~]$</span> <span class="nb">cd</span> /sys/class/drm
</span><span class='line'><span class="gp">[karoru@zea drm]$</span> ls
</span><span class='line'><span class="go">card0       card0-DP-2  card0-HDMI-A-1  card0-LVDS-1  controlD64</span>
</span><span class='line'><span class="go">card0-DP-1  card0-DP-3  card0-HDMI-A-2  card0-VGA-1   version</span>
</span><span class='line'><span class="gp">[karoru@zea drm]$</span> cat card0-VGA-1/enabled
</span><span class='line'><span class="go">disabled</span>
</span></code></pre></td></tr></table></div></figure>


<p>To nawet działa, z tym, że rozwiązanie w postaci skryptu, który zagląda co kilka sekund do /sys uważałem za mało eleganckie.</p>
]]></content>
  </entry>
  
</feed>
